@model IEnumerable<WebSale.Models.Product>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quản lý sản phẩm</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css">
    <style>
        body {
            background-color: #f8f9fa;
            min-height: 100vh;
            position: relative;
            padding-bottom: 50px; /* Khoảng trống để footer không đè lên nội dung */
        }

        h1 {
            font-size: 2rem;
            font-weight: bold;
            margin-bottom: 20px;
        }

        table {
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            padding: 10px;
            border: 1px solid #dee2e6;
            vertical-align: middle;
            text-align: center;
        }

            td img {
                max-width: 60px;
                max-height: 60px;
                border-radius: 5px;
                object-fit: cover;
            }

        footer {
            position: absolute;
            bottom: 0;
            right: 0;
            width: 100%;
            text-align: center;
            padding: 10px 20px;
            background-color: #ffffff;
            font-size: 0.85rem;
            border-top: 1px solid #dee2e6;
        }

        .btn-warning:hover {
            background-color: #e0a800;
            border-color: #d39e00;
        }

        .btn-danger:hover {
            background-color: #c82333;
            border-color: #bd2130;
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        <h1 class="text-center">Quản lý sản phẩm</h1>

        <!-- Nút thêm mới sản phẩm -->
        <div class="text-end mb-3">
            <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addProductModal">
                Thêm mới sản phẩm
            </button>
        </div>

        <!-- Bảng sản phẩm -->
        <table class="table table-bordered table-hover">
            <thead class="table-light">
                <tr>
                    <th>#</th>
                    <th>Ảnh</th>
                    <th>Tên sản phẩm</th>
                    <th>Danh mục</th>
                    <th>Giá</th>
                    <th>Số lượng</th>
                    <th>Mô tả</th>
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Model)
                {
                    <tr>
                        <td>@product.Id</td>
                        <td>
                            <img src="@(string.IsNullOrEmpty(product.Avatar) ? "/images/AvatarDefault/default.png" : product.Avatar)"
                                 alt="Product Image" style="width: 50px; height: 50px; object-fit: cover;">
                        </td>
                        <td>@product.Name</td>
                        <td>@product.Category</td>
                        <td>@product.Price.ToString("N0") VND</td>
                        <td>@product.Quantity</td>
                        <td>@product.Description</td>
                        <td>
                            <button class="btn btn-warning btn-sm" onclick="editProduct('@product.Id')">Chỉnh sửa</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteProduct('@product.Id')">Xóa</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Footer -->
    <footer>
        © Web được làm bởi Trương Văn Thành Tâm - MSV: 653814
    </footer>

    <!-- Add/Edit Product Modal -->
    <div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addProductModalLabel">Thêm mới sản phẩm</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="addProductForm" enctype="multipart/form-data">
                        <input type="hidden" id="ProductId" />
                        <div class="mb-3">
                            <label for="Name" class="form-label">Tên sản phẩm</label>
                            <input type="text" class="form-control" id="Name" required />
                        </div>
                        <div class="mb-3">
                            <label for="Category" class="form-label">Danh mục</label>
                            <input type="text" class="form-control" id="Category" required />
                        </div>
                        <div class="mb-3">
                            <label for="Price" class="form-label">Giá</label>
                            <input type="number" class="form-control" id="Price" step="0.01" required />
                        </div>
                        <div class="mb-3">
                            <label for="Quantity" class="form-label">Số lượng</label>
                            <input type="number" class="form-control" id="Quantity" step="1" min="1" required />
                        </div>
                        <div class="mb-3">
                            <label for="Description" class="form-label">Mô tả</label>
                            <textarea class="form-control" id="Description" rows="3"></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="Avatar" class="form-label">Hình ảnh</label>
                            <input type="file" class="form-control" id="Avatar" accept="image/*" />
                        </div>
                        <button type="button" class="btn btn-primary" id="saveProductBtn">Lưu sản phẩm</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

<script>
        document.addEventListener("DOMContentLoaded", function () {
            // Load products on page load
            loadProducts();

            // Add event listener to the save button
            const saveButton = document.getElementById("saveProductBtn");
            saveButton.addEventListener("click", saveProductHandler);
        });

        // Function to load products
        function loadProducts() {
            fetch('/Product/GetAllProducts')
                .then(response => response.json())
                .then(data => {
                    const tableBody = document.querySelector("table tbody");
                    tableBody.innerHTML = ""; // Xóa nội dung cũ

                    data.forEach(product => {
                        tableBody.innerHTML += `
                            <tr>
                                <td>${product.id}</td>
                                <td>
                                    <img src="${product.avatar || '/images/AvatarDefault/default.png'}"
                                         alt="Product Image">
                                </td>
                                <td>${product.name}</td>
                                <td>${product.category}</td>
                                <td>${product.price.toLocaleString()} VND</td>
                                <td>${product.quantity}</td>
                                <td>${product.description}</td>
                                <td class="action-buttons">
                                    <button class="btn btn-warning btn-sm" onclick="editProduct('${product.id}')">Chỉnh sửa</button>
                                    <button class="btn btn-danger btn-sm" onclick="deleteProduct('${product.id}')">Xóa</button>
                                </td>
                            </tr>
                        `;
                    });
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert("Không thể tải danh sách sản phẩm.");
                });
        }

        // Function to handle saving a product
        function saveProductHandler() {
            const productId = document.getElementById("ProductId").value; // Lấy Id từ input ẩn
            const formData = new FormData();

            // Thêm Id vào payload (nếu có)
            if (productId) {
                formData.append("Id", productId); // Đảm bảo thêm vào FormData
            }

            formData.append("Name", document.getElementById("Name").value.trim());
            formData.append("Category", document.getElementById("Category").value.trim());
            formData.append("Price", parseFloat(document.getElementById("Price").value));
            formData.append("Quantity", parseInt(document.getElementById("Quantity").value));
            formData.append("Description", document.getElementById("Description").value.trim() || "Không có mô tả.");

            const avatarFile = document.getElementById("Avatar").files[0];
            if (avatarFile) {
                formData.append("Avatar", avatarFile);
            }

            const url = productId ? "/Product/UpdateProduct" : "/Product/AddProduct";
            const method = productId ? "PUT" : "POST";

            fetch(url, {
                method: method,
                body: formData,
            })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(data => {
                            throw new Error(data.message);
                        });
                    }
                    return response.json();
                })
                .then(data => {
                    alert(data.message);

                    // Đóng modal
                    const modal = bootstrap.Modal.getInstance(document.getElementById("addProductModal"));
                    modal.hide();

                    loadProducts(); // Reload danh sách sản phẩm
                })
                .catch(error => {
                    console.error("Error:", error.message);
                    alert("Lỗi khi lưu sản phẩm: " + error.message);
                });
        }

        // Function to open the modal for adding a product
        function openModalForAdd() {
            // Reset giá trị của các trường input
            document.getElementById("ProductId").value = "";
            document.getElementById("Name").value = "";
            document.getElementById("Category").value = "";
            document.getElementById("Price").value = "";
            document.getElementById("Quantity").value = "";
            document.getElementById("Description").value = "";
            document.getElementById("Avatar").value = "";

            // Cập nhật lại tiêu đề modal và nút
            document.getElementById("addProductModalLabel").innerText = "Thêm mới sản phẩm";
            const saveButton = document.getElementById("saveProductBtn");
            saveButton.innerText = "Lưu sản phẩm";

            // Hiển thị modal
            const modal = new bootstrap.Modal(document.getElementById("addProductModal"));
            modal.show();
        }


        // Function to edit a product
        function editProduct(productId) {
            fetch(`/Product/GetProductById?id=${productId}`)
                .then(response => response.json())
                .then(product => {
                    // Gán giá trị Id vào input ẩn
                    document.getElementById("ProductId").value = product.id; // Phải gán đúng vào đây
                    document.getElementById("Name").value = product.name;
                    document.getElementById("Category").value = product.category;
                    document.getElementById("Price").value = product.price;
                    document.getElementById("Quantity").value = product.quantity;
                    document.getElementById("Description").value = product.description || "";

                    // Cập nhật modal
                    document.getElementById("addProductModalLabel").innerText = "Chỉnh sửa sản phẩm";
                    const saveButton = document.getElementById("saveProductBtn");
                    saveButton.innerText = "Cập nhật sản phẩm";

                    const modal = new bootstrap.Modal(document.getElementById("addProductModal"));
                    modal.show();
                })
                .catch(error => {
                    console.error("Error:", error);
                    alert("Không thể tải thông tin sản phẩm.");
                });
        }

        // Function to delete a product
        function deleteProduct(productId) {
            if (!confirm("Bạn chắc chắn muốn xóa sản phẩm?")) return;

            fetch(`/Product/DeleteProduct?id=${productId}`, {
                method: 'DELETE'
            })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(data => {
                            throw new Error(data.message);
                        });
                    }
                    return response.json();
                })
                .then(data => {
                    alert(data.message);
                    loadProducts(); // Reload the product list
                })
                .catch(error => console.error("Error:", error));
        }

</script>
</body>
</html>