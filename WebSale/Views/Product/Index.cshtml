@model WebSale.Models.ProductIndexViewModel

<h1 class="mt-4 text-center">Danh sách sản phẩm</h1>

<!-- Hiển thị danh sách các loại hàng hóa -->
<div class="mb-4 text-center">
    <h4>Danh mục</h4>
    <ul class="list-inline">
        @foreach (var category in Model.Categories)
        {
            <li class="list-inline-item">
                <a href="@Url.Action("Index", "Product", new { category = category })" class="btn btn-outline-primary">
                    @category
                </a>
            </li>
        }
    </ul>
</div>

<!-- Hiển thị danh sách sản phẩm -->
<div class="row">
    @if (Model.Products == null || !Model.Products.Any())
    {
        <div class="col-12 text-center">
            <p>Không tìm thấy sản phẩm nào trong danh mục này.</p>
        </div>
    }
    else
    {
        foreach (var product in Model.Products)
        {
            <div class="col-md-4 mb-4">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text">@product.Description</p>
                        <p class="card-text"><strong>Price:</strong> $@product.Price</p>
                        <p class="card-text"><small class="text-muted">Category: @product.Category</small></p>
                        <button class="btn btn-primary" onclick="addToCart('@product.Id')">Thêm vào giỏ hàng</button>
                    </div>
                </div>
            </div>
        }
    }
</div>

<!-- Hiển thị phân trang -->
@if (Model.TotalPages > 1)
{
    <nav class="mt-4">
        <ul class="pagination justify-content-center">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", "Product", new { category = Model.SelectedCategory, page = Model.CurrentPage - 1 })">
                        Trước
                    </a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", "Product", new { category = Model.SelectedCategory, page = i })">@i</a>
                </li>
            }

            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", "Product", new { category = Model.SelectedCategory, page = Model.CurrentPage + 1 })">
                        Sau
                    </a>
                </li>
            }
        </ul>
    </nav>
}


<!-- Script để xử lý Add to Cart -->
<script>
    function addToCart(productId) {
        fetch('/Cart/AddToCart', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ productId: productId }) // Truyền dưới dạng đối tượng JSON với key "productId"
        })
        .then(response => {
            if (!response.ok) {
                return response.json().then(data => {
                    throw new Error(data.message);
                });
            }
            return response.json();
        })
        .then(data => {
            alert(data.message); // Hiển thị thông báo thành công
        })
        .catch(error => {
            console.error('Error:', error.message);
            alert("Error: " + error.message);
        });
    }
</script>

